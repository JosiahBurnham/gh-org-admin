name: Test Initialize Repo

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - "master"
      - "main"
    paths:
      - repos/**

env:
  TF_VAR_gh_token: ${{ secrets.GH_PAT_TOKEN }}
  TF_VAR_aws_role: ${{ secrets.AWS_ASSUME_ROLE }}

permissions: write-all

jobs:
  GetModifiedFiles:
    name: Get Modified Files
    runs-on: ubuntu-latest

    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: Get Modified Files
        id: modified-files
        uses: tj-actions/changed-files@v41
        with:
          files_separator: ","
          files: |
            repos/**

    outputs:
      matrix: ${{ steps.modified-files.outputs.all_changed_files }}

  InitProject:
    name: Initialize Repo
    runs-on: ubuntu-latest
    needs: GetModifiedFiles
    strategy:
      matrix:
        FUNCTIONS: ["${{needs.GetModifiedFiles.outputs.matrix}}", none]
        exclude:
          - FUNCTIONS: none

    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-session-name: gh-actions-exe-role
          aws-region: us-east-1

      - name: terraform setup
        uses: hashicorp/setup-terraform@v3

      - name: test create repo
        id: plan
        run: |   
          mkdir -p /tmp/tfplan       
          for file in ${{ matrix.FUNCTIONS }}; do
            filename=`basename $file`
            if [[ "$file" != 'none' && "$filename" == 'main.tf' ]]
            then
              DIR="$(dirname "${file}")"
              PLANFILENAME=`echo $DIR | tr / _`
              terraform -chdir=$DIR init
              echo 'plan<<EOF' >> $GITHUB_OUTPUT
              terraform -chdir=$DIR plan -out=/tmp/tfplan/$PLANFILENAME.tfplan -no-color >> $GITHUB_OUTPUT
              echo 'EOF' >> $GITHUB_OUTPUT
            fi
          done

      - name: Get PR ID
        id: pr-id
        shell: bash
        env:
          GITHUB_REF: ${{ inputs.github_ref }}
        run: |
          PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_OUTPUT

      - name: Comment Plan
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.GH_PAT_TOKEN }}
          issue-number: ${{ steps.pr-id.outputs.PR_NUMBER }}
          body: |
            Terraform Plan:

            ```
            ${{ steps.plan.outputs.plan }}
            ```
        
          